apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "pastebin.labels" . | nindent 4 }}
    {{- with .Values.deployment.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "pastebin.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: "25%"
    type: RollingUpdate
  template:
    metadata:
      {{- if .Values.metrics.enabled }}
      annotations:
        prometheus.io/port: {{ .Values.metrics.port | quote }}
        prometheus.io/scrape: "true"
      {{- end }}
      labels:
        {{- include "pastebin.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.deployment.name }}
          env:
            - name: PORT
              value: "{{ .Values.deployment.port }}"
          envFrom:
            - configMapRef:
                name: {{ .Values.deployment.name }}
            - secretRef:
                name: {{ .Values.deployment.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          ports:
            - containerPort: {{ .Values.deployment.port }}
              name: http
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            successThreshold: 3
            httpGet:
              path: /
              port: http
          {{- with .Values.deployment.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.metrics.enabled }}
        - name: metrics
          image: {{ template "nginx.metrics.image" . }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
          command: ['/usr/bin/exporter', '-nginx.scrape-uri', 'http://127.0.0.1:80/status']
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
          {{- if .Values.metrics.resources }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
          {{- end }}
        {{- end }}
